---
- hosts: initial
  gather_facts: yes
  become: yes
  tasks:
    - name: 'install packages'
      dnf:
        name: "{{ item }}"
        state: latest
      loop:
        - ansible
        - git
        - vim
        - net-tools
        - telnet
    - name: 'copy hosts file'
      copy:
        src: hosts
        dest: /etc/hosts
        owner: root
        group: root
    - name: 'open firewalld'
      firewalld:
        port: "{{ item }}"
        permanent: yes
        immediate: yes
        state: enabled
      loop:
        - 179/tcp
        - 6443/tcp
        - 8443/tcp
        - 8091/tcp
        - 8090/tcp
        - 53/tcp
        - 2376/tcp
        - 2379-2380/tcp
        - 6641-6642/tcp
        - 9000-9999/tcp
        - 10250/tcp
        - 10254/tcp
        - 10257/tcp
        - 10255/tcp
        - 10252/tcp
        - 10259/tcp
        - 22623/tcp
        - 30000-32767/tcp
        - 53/udp
        - 500/udp
        - 8472/udp
        - 4500/udp
        - 4789/udp
        - 5353/udp
        - 6081/udp
        - 8472/udp
        - 9000-9999/udp
        - 30000-32767/udp
        - 1936/tcp
        - 3306/tcp
        - 4567/tcp
        - 4568/tcp
        - 4444/tcp
        - 4567/udp

    - name: 'set hostname'
      ansible.builtin.hostname:
        name: "{{ item.hostname }}"
      loop:
        - { host: '172.22.22.5', hostname: 'k3s1' }
        - { host: '172.22.22.6', hostname: 'k3s2' }
        - { host: '172.22.22.7', hostname: 'k3s3' }
      when: ansible_host == item.host
    - name: 'open services web'
      firewalld:
        service: "{{ item }}"
        permanent: yes
        immediate: yes
        state: enabled
      loop:
        - https
        - http
    - name: 'open protocols'
      firewalld:
        rich_rule: "rule protocol value={{ item }} accept"
        permanent: yes
        immediate: yes
        state: enabled
      loop:
        - ah
        - esp
        - 112
    - name: 'create interface'
      nmcli:
        type: vlan
        conn_name: k3s
        ifname: ens32.1
        vlandev: ens32
        vlanid: 1
        ip4: "{{ item.ipv4 }}"
        autoconnect: true
        state: present
      loop:
        - { host: '172.22.22.5', ipv4: 172.20.254.1/24 }
        - { host: '172.22.22.6', ipv4: 172.20.254.2/24 }
        - { host: '172.22.22.7', ipv4: 172.20.254.3/24 }
      when: ansible_host == item.host

