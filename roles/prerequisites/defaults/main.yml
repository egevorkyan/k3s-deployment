internal_network: 172.254.254.0/24
internal_network_start: 172.254.254.5/24
internal_cidr: 24
internal_vip: 172.254.254.250

#RHEL based OS variables
packages_redhat:
  - git
  - vim
  - net-tools
  - telnet
  - firewalld

firewall_port_list:
  - { port: 6443/tcp, state: enabled }
  - { port: 8443/tcp, state: enabled }
  - { port: 8091/tcp, state: enabled }
  - { port: 8090/tcp, state: enabled }
  - { port: 80/tcp, state: enabled }
  - { port: 443/tcp, state: enabled }
  - { port: 53/tcp, state: enabled }
  - { port: 2376/tcp, state: enabled }
  - { port: 2379-2380/tcp, state: enabled }
  - { port: 6641-6642/tcp, state: enabled }
  - { port: 9000-9999/tcp, state: enabled }
  - { port: 10250/tcp, state: enabled }
  - { port: 10254/tcp, state: enabled }
  - { port: 10257/tcp, state: enabled }
  - { port: 10255/tcp, state: enabled }
  - { port: 10252/tcp, state: enabled }
  - { port: 10259/tcp, state: enabled }
  - { port: 22623/tcp, state: enabled }
  - { port: 30000-32767/tcp, state: enabled }
  - { port: 1936/tcp, state: enabled }
  - { port: 3306/tcp, state: enabled }
  - { port: 4567/tcp, state: enabled }
  - { port: 4568/tcp, state: enabled }
  - { port: 4444/tcp, state: enabled }
  - { port: 53/udp, state: enabled }
  - { port: 500/udp, state: enabled }
  - { port: 8472/udp, state: enabled }
  - { port: 4500/udp, state: enabled }
  - { port: 4789/udp, state: enabled }
  - { port: 5353/udp, state: enabled }
  - { port: 6081/udp, state: enabled }
  - { port: 8472/udp, state: enabled }
  - { port: 9000-9999/udp, state: enabled }
  - { port: 30000-32767/udp, state: enabled }
  - { port: 4567/udp, state: enabled }

firewall_rich_rules:
  - { proto: ah, state: enabled }
  - { proto: esp, state: enabled }
  - { proto: 112, state: enabled }

#Debian based OS variables
packages_debian:
  - git
  - vim
  - net-tools
  - telnet

ufw_port_list:
  - { port: 22, proto: tcp, state: allow }
  - { port: 6443, proto: tcp, state: allow }
  - { port: 8443, proto: tcp, state: allow }
  - { port: 8091, proto: tcp, state: allow }
  - { port: 8090, proto: tcp, state: allow }
  - { port: 80, proto: tcp, state: allow }
  - { port: 443, proto: tcp, state: allow }
  - { port: 53, proto: tcp, state: allow }
  - { port: 2376, proto: tcp, state: allow }
  - { port: 2379:2380, proto: tcp, state: allow }
  - { port: 6641:6642, proto: tcp, state: allow }
  - { port: 9000:9999, proto: tcp, state: allow }
  - { port: 10250, proto: tcp, state: allow }
  - { port: 10254, proto: tcp, state: allow }
  - { port: 10257, proto: tcp, state: allow }
  - { port: 10255, proto: tcp, state: allow }
  - { port: 10252, proto: tcp, state: allow }
  - { port: 10259, proto: tcp, state: allow }
  - { port: 22623, proto: tcp, state: allow }
  - { port: 30000:32767, proto: tcp, state: allow }
  - { port: 1936, proto: tcp, state: allow }
  - { port: 3306, proto: tcp, state: allow }
  - { port: 4567, proto: tcp, state: allow }
  - { port: 4568, proto: tcp, state: allow }
  - { port: 4444, proto: tcp, state: allow }
  - { port: 53, proto: udp, state: allow }
  - { port: 500, proto: udp, state: allow }
  - { port: 8472, proto: udp, state: allow }
  - { port: 4500, proto: udp, state: allow }
  - { port: 4789, proto: udp, state: allow }
  - { port: 5353, proto: udp, state: allow }
  - { port: 6081, proto: udp, state: allow }
  - { port: 8472, proto: udp, state: allow }
  - { port: 9000:9999, proto: udp, state: allow }
  - { port: 30000:32767, proto: udp, state: allow }
  - { port: 4567, proto: udp, state: allow }

ufw_proto_rules:
  - { proto: ah, state: allow }
  - { proto: esp, state: allow }

ufw_multicast_vrrp_list:
  - { muticast: 224.0.0.18, state: allow }
  - { muticast: "{{ internal_network }}", state: allow }

# defaults file for ansible-netplan
netplan_config_file: /etc/netplan/ansible-config.yaml

# switch to enable/disable the role completely
netplan_enabled: true

# Configured devices get handled by systemd-networkd by default, unless explicitly marked as managed by a specific renderer (NetworkManager)
netplan_renderer:

netplan_configuration:
  {}
  # network:
  #   version: 2
  #   ethernets:
  #     enp0s3:
  #       dhcp4: true
  #     enp0s8:
  #       addresses:
  #         - 192.168.250.10/24
  #         - 192.168.250.11/24
  #       nameservers:
  #         addresses:
  #           - 10.0.2.3
  #           - 8.8.8.8
  #           - 8.8.4.4
  #         search:
  #           # Custom variable
  #           - "{{ netplan_pri_domain }}"
  #       gateway4: 192.168.250.1
  #       optional: true
  #       routes:
  #         - to: 0.0.0.0/0
  #           via: 9.9.9.9
  #           on-link: true
  #         - to: 192.168.5.0/24
  #           via: 192.168.5.1
  #           table: 102
  #       routing-policy:
  #         - from: 192.168.5.0/24
  #           table: 102
  #     lo:
  #       match:
  #         name: lo
  #       addresses: [7.7.7.7/32]
  #   wifis:
  #     wlp2s0b1:
  #       dhcp4: no
  #       dhcp6: no
  #       addresses: [192.168.0.21/24]
  #       gateway4: 192.168.0.1
  #       access-points:
  #         "network_ssid_name":
  #           password: "**********"
  #   bonds:
  #     bond0:
  #       dhcp4: yes
  #       interfaces:
  #         - enp0s3
  #         - enp4s0
  #       parameters:
  #         # modes can be one of balance-rr, active-backup, balance-xor, broadcast,
  #         # 802.3ad, balance-tlb, and balance-alb.
  #         mode: active-backup
  #         primary: enp0s3
  #   bridges:
  #     # br0:
  #     #   dhcp4: yes
  #     #   interfaces:
  #     #     - enp0s3
  #     br0:
  #       addresses: [10.3.99.25/24]
  #       interfaces: [vlan15]
  #   vlans:
  #     vlan15:
  #       accept-ra: no
  #       id: 15
#       link: enp0s25

netplan_remove_existing: true

netplan_packages:
  - nplan
  - netplan.io

netplan_pri_domain: example.org

netplan_check_install: True

netplan_apply: True